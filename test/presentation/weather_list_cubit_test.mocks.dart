// Mocks generated by Mockito 5.3.0 from annotations
// in weather_report/test/presentation/weather_list_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_report/core/data/cache_options.dart' as _i5;
import 'package:weather_report/data/weather_list/repository/weather_list_repository.dart'
    as _i3;
import 'package:weather_report/domain/data.dart' as _i2;
import 'package:weather_report/domain/weather_item.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherDatas_0 extends _i1.SmartFake implements _i2.WeatherDatas {
  _FakeWeatherDatas_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherListRepository extends _i1.Mock
    implements _i3.WeatherListRepository {
  MockWeatherListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.WeatherDatas> getValues(
    DateTime? startDate,
    DateTime? endDate,
    _i5.CacheStrategy? cacheStrategy,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getValues,
          [
            startDate,
            endDate,
            cacheStrategy,
          ],
        ),
        returnValue: _i4.Future<_i2.WeatherDatas>.value(_FakeWeatherDatas_0(
          this,
          Invocation.method(
            #getValues,
            [
              startDate,
              endDate,
              cacheStrategy,
            ],
          ),
        )),
      ) as _i4.Future<_i2.WeatherDatas>);
  @override
  _i4.Future<List<_i6.WeatherItemDescription>> getDescriptions(
    DateTime? startDate,
    DateTime? endDate,
    _i5.CacheStrategy? cacheStrategy,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDescriptions,
          [
            startDate,
            endDate,
            cacheStrategy,
          ],
        ),
        returnValue: _i4.Future<List<_i6.WeatherItemDescription>>.value(
            <_i6.WeatherItemDescription>[]),
      ) as _i4.Future<List<_i6.WeatherItemDescription>>);
}
